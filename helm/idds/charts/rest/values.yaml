# Default values for main.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/hsf/idds
  pullPolicy: "IfNotPresent"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# start the service when pod gets started
autoStart: true

# run with non-root pid
noRoot: false

persistentvolume:
  create: true
  class: manual
  path: "/mnt/idds-rest-logs"
  size: 5Gi

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  httpsPort: 8443
  httpPort: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: 'true'
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'optional_no_ca'
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: '10'

    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "10m"
    nginx.ingress.kubernetes.io/client_max_body_size: "10m"
    
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      proxy_set_header X-IDDS-Auth-Type $http_x_idds_auth_type;
      proxy_set_header X-IDDS-Auth-VO $http_x_idds_auth_vo;
      proxy_set_header X-IDDS-Auth-Token $http_x_idds_auth_token;
      proxy_set_header X-IDDS-Auth-Username-Original $http_x_idds_auth_username_original;
      proxy_set_header X-IDDS-Auth-Usercert-Original $http_x_idds_auth_usercert_original;
      proxy_set_header X-IDDS-Auth-Userdn-Original $http_x_idds_auth_userdn_original;

      proxy_set_header SSL-CLIENT-CERT $ssl_client_escaped_cert;
      proxy_set_header SSL-CLIENT-S-DN  $ssl_client_s_dn;

    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
        ssl on;
        ssl_verify_client optional_no_ca;
        ssl_verify_depth 10;

  hosts:
    - domain: cern.ch
      hostOverride: ""
      paths:
        - path: /
          pathType: Prefix

  tls:
    - secretName: idds-dev-main-tls-cert
      hosts:
        - domain: cern.ch
          hostOverride: ""
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
