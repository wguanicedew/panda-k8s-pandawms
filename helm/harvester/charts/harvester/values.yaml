# Default values for harvester.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/hsf/harvester
  pullPolicy: Always
  tag: latest

# start the service when pod gets started
autoStart: true

# experiment to use to init and setup crons
experiment: ""

pilotcerts:
  enabled: false

# http proxy
httpProxy: ""
httpsProxy: ""

# harvester id
harvesterID: "my-harvester"

# run with non-root pid
noRoot: true

persistentvolume:
  create: false
  class: nas
  path: "/mnt/harvester-logs"
  size: 5Gi
  selector: true

database:
  # Set true to get database password via database configmap
  password_get: true
  # Specify name of database configmap if any
  # config_ref: harvester-mariadb-configmap

panda:
  # panda server host and https port
  host: "pandaserver-doma.cern.ch"

  # ID token and VO for OIDC/OAuth
  authIdToken: ""
  authVO: ""

  # panda server behind real load balancer
  behindRealLB: true


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
